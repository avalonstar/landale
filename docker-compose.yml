version: '3.5'

services:
  database:
    image: postgres:12
    restart: always
    volumes: 
      - server_db:/var/lib/postgresql/data/
    env_file: 
      - .production.env
    ports:
      - 5432:5432      

  api:
    build: .
    env_file:
      - .production.env
    depends_on: 
      - database
    ports:
      - 3000:3000
    labels: 
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.landale.app`)"
      - "traefik.http.routers.api.entrypoints=secure"
      - "traefik.http.routers.api.tls.certresolver=le"      

  traefik:
    image: traefik:latest
    restart: always
    volumes: 
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 443:443

    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http_catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http_catchall.entrypoints=insecure"
      - "traefik.http.routers.http_catchall.middlewares=https_redirect"
      - "traefik.http.middlewares.https_redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https_redirect.redirectscheme.permanent=true"
      - "traefik.http.routers.traefik.rule=Host(`traefik.landale.app`)"
      - "traefik.http.routers.traefik.entrypoints=secure"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.middlewares.ipwhitelist.ipwhitelist.sourcerange=127.0.0.1/32, 104.60.90.194"

volumes: 
  server_db:

networks: 
  default: 
    external:
      name: "traefik-network"
